[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "ctrl-alt-p": ["task::Spawn", { "task_name": "build:run" }],
      "space f f": ["task::Spawn", { "task_name": "search:project" }],
      "space '": "pane::ActivateNextItem",
      "space ;": "pane::ActivatePreviousItem",
      "space v": "pane::SplitRight",
      "space H": "pane::SplitDown",
      "space d": "pane::CloseActiveItem",
      "space m": "markdown::OpenPreview",
      "space M": "markdown::OpenPreviewToTheSide",
      "shift-k": "editor::Hover",
			"space /": "workspace::NewSearch",
			"n": "search::SelectNextMatch",
			"shift-n": "search::SelectPreviousMatch",
    }
  },

  {
    "context": "Workspace && not_editing",
    "bindings": {
      "space T": "workspace::ToggleBottomDock",
      "space e": "workspace::ToggleLeftDock",
      "space r": "workspace::ToggleRightDock",
			"ctrl-i": "workspace::NewFile",
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "shift-tab": "editor::ContextMenuPrev",
      "tab": "editor::ContextMenuNext",
    }
  },
  {
    "context": "Dock || Terminal || Editor || ProjectPanel || AssistantPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView",
    "bindings": {
      "ctrl-l": "vim::ResizePaneRight",
      "ctrl-h": "vim::ResizePaneLeft",
      "ctrl-k": "vim::ResizePaneDown",
      "ctrl-j": "vim::ResizePaneUp"
    }
  },
  {
    "context": "Editor || Terminal || ProjectPanel",
    "bindings": {
      "ctrl-'": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "((extension == md) && (vim_mode == normal)) || (Editor && vim_mode == normal)",
    "bindings": {
      "space t t": ["task::Spawn", { "task_name": "open:terminal" }],
      "space e": "workspace::ToggleLeftDock",
      "space r": "workspace::ToggleRightDock",
      "space h": "workspace::ActivatePaneLeft",
      "space l": "workspace::ActivatePaneRight",
      "space k": "workspace::ActivatePaneUp",
      "space j": "workspace::ActivatePaneDown",
      "space z": "workspace::ToggleZoom",
      "space space": "file_finder::Toggle",
      "space /": "pane::DeploySearch",

      "space g f": "git::Fetch",
      "space g P": "git::Push",
      "space g p": "git::Pull",
      "ctrl-g shift-up": "git::ForcePush",
      "space g d": "git::Diff",
      "ctrl-g backspace": "git::RestoreTrackedFiles",
      "ctrl-g shift-backspace": "git::TrashUntrackedFiles",
      "space ga": "git::StageAll",
      "ctrl-shift-space": "git::UnstageAll"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space e": "workspace::ToggleLeftDock",
      "space r": "workspace::ToggleRightDock",
      "space l": "workspace::ActivatePaneRight",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "ctrl-v": "project_panel::Paste",
      "shift-y": "project_panel::CopyPath",
    }
  },
  {
    "context": "ProjectPanel && editing",
    "bindings": {
      "ctrl-v": "project_panel::Paste",
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      "space e": "project_panel::Open",
      "space space": "file_finder::Toggle",
      "space f p": "projects::OpenRecent",
    },
  },
  {
    "context": "GitPanel && ChangesList",
    "bindings": {
      "a": "git::ToggleStaged",
      "q": "workspace::ToggleRightDock",
      "space r": "workspace::ToggleRightDock",
      "k": "menu::SelectPrevious",
      "j": "menu::SelectNext",
      "esc": "workspace::ToggleRightDock",
    },
  },
  {
    "context": "GitPanel",
    "use_key_equivalents": true,
    "bindings": {
      "esc": "workspace::ToggleRightDock",
      "space gf": "git::Fetch",
      "space P": "git::Push",
      "space gp": "git::Pull",
      "ctrl-g shift-up": "git::ForcePush",
      "space gd": "git::Diff",
      "ctrl-g backspace": "git::RestoreTrackedFiles",
      "ctrl-g shift-backspace": "git::TrashUntrackedFiles",
      "space ga": "git::StageAll",
      "ctrl-shift-space": "git::UnstageAll"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "q": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock",
      "space g": "workspace::ToggleRightDock",
    },
  },
  {
    "context": "Editor && !menu",
    "bindings": {
      "ctrl-c": "editor::Copy",          // vim default: return to normal mode
      "ctrl-x": "editor::Cut",           // vim default: decrement
      "ctrl-v": "editor::Paste",         // vim default: visual block mode
      "ctrl-y": "editor::Undo",          // vim default: line up
      "ctrl-f": "buffer_search::Deploy", // vim default: page down
      "ctrl-o": "workspace::Open",       // vim default: go back
      "ctrl-a": "editor::SelectAll",     // vim default: increment
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-s": ["vim::PushAddSurrounds", {}]
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-shift-v": "editor::Paste",
    }
  }
]
